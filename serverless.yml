org: alanhuanca
app: softek
service: api-lambda-dynamo
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:590183877206:table/TaskTable

plugins:
  - serverless-offline
  - serverless-openapi-documentation

functions:
  api:
    handler: src/index.handler
    events:
      - httpApi:
          path: /
          method: get
  createTask:
    handler: src/addTask.addTask
    events:
      - httpApi:
          path: /tasks
          method: post
          documentation:
            summary: "Create new task"
            description: "Creates a task with body {title, description}"
  getTasks:
    handler: src/getTasks.getTasks
    events:
      - httpApi:
          path: /tasks
          method: get
  getTask:
    handler: src/getTask.getTask
    events:
      - httpApi:
          path: /tasks/{id}
          method: get
  getSwapi:
    handler: src/getSwapi.getSwapi
    events:
      - httpApi:
          path: /swapi
          method: get
    environment:
      URL_SWAPI: https://swapi.py4e.com/api/people
resources:
  Resources:
    TaskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TaskTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

custom:
  documentation:
    version: '1'
    title: 'My API AWS LAMBDA DYNAMODB'
    description: 'Esta es una demo para un reto softek'

